{"version":3,"sources":["serviceWorker.js","searchingAlgorithms/linearSearch.js","searchingAlgorithms/binarySearch.js","contexts/NumbersContext.js","components/NumbersContainer/index.js","components/ButtonsContainer/index.js","components/ConfigurationContainer/index.js","pages/SearchingAlgorithmsExamples/index.js","index.js"],"names":["Boolean","window","location","hostname","match","linearSearch","numbers","value","i","animations","push","index","classes","length","binarySearch","p","r","q","Math","floor","Context","createContext","NumbersStore","props","useState","setNumbers","quantity","setQuantity","sorted","setSorted","searching","setSearching","speed","setSpeed","valueToSearch","setValueToSearch","useEffect","generateRandomNumbers","isSorted","JSON","stringify","sort","a","b","numbersArray","id","uniqueID","getRandomNumber","chr4","random","toString","slice","min","max","ceil","performAnimations","forEach","animation","setTimeout","movingNumbers","undefined","toIndex","aux","Provider","handleBinarySearch","binarySearchAnimations","console","log","handleLinearSearch","linearSearchAnimations","handleSort","sortedNumbers","onChangeQuantity","target","onChangeSpeed","onChangeValueToSearch","children","NumbersContainer","context","useContext","NumbersContext","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","direction","provided","className","ref","innerRef","droppableProps","map","number","key","draggableId","snapshot","draggableProps","dragHandleProps","isDragging","placeholder","ButtonsContainer","onClick","disabled","ConfigurationContainer","onChange","step","style","width","type","sorting","SearchingAlgorithmsExample","ReactDOM","render","SearchingAlgorithmsExamples","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11a10bdf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const linearSearch = (numbers, value, i = 0, animations = []) => {\n  if (i > 0) {\n    animations.push({\n      index: i - 1,\n      classes: \"\"\n    });\n  }\n  if (i > numbers.length - 1) {\n    return animations;\n  }\n  animations.push({\n    index: i,\n    classes: \"searching--checking\"\n  });\n  if (numbers[i].value === value) {\n    animations.push({\n      index: i,\n      classes: \"searching--matched\"\n    });\n    return animations;\n  }\n  return linearSearch(numbers, value, ++i, animations);\n};\n\nexport default linearSearch;\n","const binarySearch = (\n  numbers,\n  value,\n  p = 1,\n  r = numbers.length,\n  animations = []\n) => {\n  if (p > r) return animations;\n  const q = Math.floor((p + r) / 2);\n  animations.push({\n    index: q - 1,\n    classes: \"searching--checking\"\n  });\n  if (numbers[q - 1].value === value) {\n    animations.push({\n      index: q - 1,\n      classes: \"searching--matched\"\n    });\n    return animations;\n  }\n  if (numbers[q - 1].value > value) {\n    animations.push({\n      index: q - 1,\n      classes: \"\"\n    });\n    return binarySearch(numbers, value, p, q - 1, animations);\n  } else {\n    animations.push({\n      index: q - 1,\n      classes: \"\"\n    });\n    return binarySearch(numbers, value, q + 1, r, animations);\n  }\n};\n\nexport default binarySearch;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport linearSearch from \"../searchingAlgorithms/linearSearch\";\nimport binarySearch from \"../searchingAlgorithms/binarySearch\";\n\nconst Context = createContext([]);\nexport const NumbersStore = props => {\n  const [numbers, setNumbers] = useState([]);\n  const [quantity, setQuantity] = useState(10);\n  const [sorted, setSorted] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [valueToSearch, setValueToSearch] = useState(10);\n  useEffect(() => {\n    generateRandomNumbers();\n    // eslint-disable-next-line\n  }, [quantity]);\n  useEffect(() => {\n    const isSorted =\n      JSON.stringify([...numbers]) ===\n      JSON.stringify([...numbers].sort((a, b) => a.value - b.value));\n    setSorted(isSorted);\n  }, [numbers]);\n  const generateRandomNumbers = () => {\n    const numbersArray = [];\n    for (let i = 0; i < quantity; i++) {\n      numbersArray.push({\n        id: uniqueID(),\n        value: getRandomNumber(0, 99),\n        classes: \"\"\n      });\n    }\n    setNumbers(numbersArray);\n  };\n  const uniqueID = () => {\n    function chr4() {\n      return Math.random()\n        .toString(16)\n        .slice(-4);\n    }\n    return (\n      chr4() +\n      chr4() +\n      \"-\" +\n      chr4() +\n      \"-\" +\n      chr4() +\n      \"-\" +\n      chr4() +\n      \"-\" +\n      chr4() +\n      chr4() +\n      chr4()\n    );\n  };\n  const getRandomNumber = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n  const onChangeValueToSearch = ({ target }) => {\n    if (+target.value > 99) setValueToSearch(99);\n    else if (+target.value < 0 || target.value === \"\") setValueToSearch(0);\n    else setValueToSearch(+target.value);\n  };\n  const onChangeQuantity = ({ target }) => {\n    if (+target.value > 99) setQuantity(99);\n    else if (+target.value < 2) setQuantity(2);\n    else setQuantity(+target.value);\n  };\n  const handleSort = () => {\n    const sortedNumbers = [...numbers].sort((a, b) => a.value - b.value);\n    setNumbers(sortedNumbers);\n  };\n  const handleLinearSearch = () => {\n    const linearSearchAnimations = linearSearch(numbers, valueToSearch);\n    performAnimations(linearSearchAnimations);\n  };\n  const handleBinarySearch = () => {\n    const binarySearchAnimations = binarySearch(numbers, valueToSearch);\n    console.log(binarySearchAnimations);\n    performAnimations(binarySearchAnimations);\n  };\n  const performAnimations = animations => {\n    setSearching(true);\n    animations.forEach((animation, index) => {\n      setTimeout(() => {\n        let movingNumbers = [...numbers];\n        movingNumbers[animation.index].classes = animation.classes;\n        if (animation.toIndex !== undefined) {\n          const aux = movingNumbers[animation.toIndex].value;\n          movingNumbers[animation.toIndex].value =\n            movingNumbers[animation.index].value;\n          movingNumbers[animation.index].value = aux;\n        }\n        setNumbers(movingNumbers);\n      }, index * (500 / speed));\n    });\n    setTimeout(() => {\n      setSearching(false);\n    }, animations.length * (500 / speed));\n  };\n  const onChangeSpeed = ({ target }) => {\n    setSpeed(target.value);\n  };\n  return (\n    <Context.Provider\n      value={{\n        generateRandomNumbers,\n        handleBinarySearch,\n        handleLinearSearch,\n        handleSort,\n        numbers,\n        onChangeQuantity,\n        onChangeSpeed,\n        onChangeValueToSearch,\n        quantity,\n        searching,\n        setNumbers,\n        sorted,\n        speed,\n        valueToSearch\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport default Context;\n","import React, { useContext } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport NumbersContext from \"../../contexts/NumbersContext\";\n\nconst NumbersContainer = () => {\n  const context = useContext(NumbersContext);\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n  const onDragEnd = result => {\n    if (!result.destination) return;\n\n    const items = reorder(\n      context.numbers,\n      result.source.index,\n      result.destination.index\n    );\n\n    context.setNumbers(items);\n  };\n  return (\n    <>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n          {provided => (\n            <div\n              className=\"numbers-container\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {context.numbers.map((number, index) => (\n                <Draggable\n                  key={number.id}\n                  draggableId={number.id}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      className={number.classes}\n                    >\n                      <div\n                        className={\n                          snapshot.isDragging\n                            ? \"number number--dragging\"\n                            : \"number\"\n                        }\n                      >\n                        {number.value}\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default NumbersContainer;\n","import React, { useContext } from \"react\";\nimport NumbersContext from \"../../contexts/NumbersContext\";\n\nconst ButtonsContainer = () => {\n  const context = useContext(NumbersContext);\n  return (\n    <>\n      <div className=\"buttons-container\">\n        <button\n          className=\"button\"\n          onClick={context.generateRandomNumbers}\n          disabled={context.searching}\n        >\n          Generate random numbers\n        </button>\n        <button\n          className=\"button\"\n          onClick={context.handleSort}\n          disabled={context.searching}\n        >\n          Sort numbers\n        </button>\n      </div>\n      <div className=\"buttons-container\">\n        <button\n          className=\"button\"\n          onClick={context.handleLinearSearch}\n          disabled={context.searching}\n        >\n          Linear search\n        </button>\n        <button\n          className=\"button\"\n          onClick={context.handleBinarySearch}\n          disabled={!context.sorted || context.searching}\n        >\n          Binary search\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ButtonsContainer;\n","import React, { useContext } from \"react\";\nimport NumbersContext from \"../../contexts/NumbersContext\";\n\nconst ConfigurationContainer = () => {\n  const context = useContext(NumbersContext);\n  return (\n    <div className=\"buttons-container buttons-container--configuration\">\n      <div>Searching for the number</div>\n      <input\n        className=\"number\"\n        max=\"99\"\n        min=\"0\"\n        onChange={context.onChangeValueToSearch}\n        step=\"1\"\n        style={{ width: `${(\"\" + context.valueToSearch).length * 24}px` }}\n        type=\"number\"\n        value={context.valueToSearch}\n      />\n      <div>in</div>\n      <input\n        className=\"number number--config\"\n        max=\"99\"\n        min=\"2\"\n        onChange={context.onChangeQuantity}\n        step=\"1\"\n        style={{ width: `${(\"\" + context.quantity).length * 24}px` }}\n        type=\"number\"\n        value={context.quantity}\n      />\n      <div>numbers at</div>\n      <input\n        className=\"number number--config\"\n        disabled={context.sorting}\n        min=\"1\"\n        onChange={context.onChangeSpeed}\n        step=\"1\"\n        style={{ width: `${(\"\" + context.speed).length * 17}px` }}\n        type=\"number\"\n        value={context.speed}\n      />\n      <div>x speed.</div>\n    </div>\n  );\n};\n\nexport default ConfigurationContainer;\n","import React from \"react\";\nimport NumbersContainer from \"../../components/NumbersContainer\";\nimport ButtonsContainer from \"../../components/ButtonsContainer\";\nimport ConfigurationContainer from \"../../components/ConfigurationContainer\";\nimport { NumbersStore } from \"../../contexts/NumbersContext\";\n\nconst SearchingAlgorithmsExample = () => {\n  return (\n    <NumbersStore>\n      <div className=\"page-container\">\n        <h1>Searching Algorithms Examples</h1>\n        <ConfigurationContainer />\n        <NumbersContainer />\n        <ButtonsContainer />\n      </div>\n    </NumbersStore>\n  );\n};\n\nexport default SearchingAlgorithmsExample;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport SearchingAlgorithmsExamples from \"./pages/SearchingAlgorithmsExamples\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(\n  <SearchingAlgorithmsExamples />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}